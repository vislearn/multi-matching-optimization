name: Build

on: 
  push:
    branches:
      - python
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        env:
          # Ensures that all required dll's are packaged with the wheel
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"

          # OpenMP is not installed by default on MacOS. 
          # Compilation from source is necessary to be MacOS version independent. Installation via brew i snot recommended (and fails) for cibuildwheel.
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET="12.0" # Necessary for modern C++ functionalities. MacOS 11 reached end of life at time of writing.
          CIBW_BEFORE_ALL_MACOS: >
            wget -q --show-progress https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-16.0.0.tar.gz &&
            tar -xf llvmorg-16.0.0.tar.gz &&
            mkdir llvm-project-llvmorg-16.0.0/openmp/build &&
            cd llvm-project-llvmorg-16.0.0/openmp/build &&
            cmake -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Release .. &&
            sudo make &&
            sudo make install
            
      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
  
  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          # unpacks all CIBW artifacts into dist/
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - uses: pypa/gh-action-pypi-publish@release/v1
